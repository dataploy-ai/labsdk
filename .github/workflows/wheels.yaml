name: Build

on: [ push, pull_request ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    strategy:
      matrix:
        os: [ macOS-10.15, ubuntu-20.04, windows-2019 ]

    steps:
      - name: Setup Go environment
        if: runner.os != 'Linux'
        uses: actions/setup-go@v3
        with:
          go-version: '^1.18'

      - name: Clone the code
        uses: actions/checkout@v3
      # Used to host cibuildwheel
      - uses: actions/setup-python@v3

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.6.0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Install unix compatibility utility
        if: runner.os == 'Windows'
        uses: cygwin/cygwin-install-action@master

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: 'quay.io/pypa/manylinux_2_28_x86_64'
          CIBW_MANYLINUX_AARCH64_IMAGE: 'quay.io/pypa/manylinux_2_28_aarch64'
          CIBW_MANYLINUX_PPC64LE_IMAGE: 'quay.io/pypa/manylinux_2_28_ppc64le'

          CIBW_BEFORE_ALL_LINUX: curl -L https://git.io/vQhTU | bash -s -- --version 1.18.3  && source /root/.bashrc
          CIBW_ENVIRONMENT_LINUX: PATH=$PATH:/$HOME/.go/bin

          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS_LINUX: x86_64 aarch64 ppc64le
          CIBW_SKIP: pp*
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
